<?php

function shrtr_permission() {
  return array(
    'shrtr admin urls' => array(
      'title' => t('Administer shrtr URLs'), 
    ),
  );
}
/**
 * Implements hook_menu().
 */
function shrtr_menu() {
  $items['admin/config/content/shrtr/urls'] = array(
    'title' => 'Shrtr',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shrtr_urls_admin'),
    'access arguments' => array('shrtr admin urls'),
  );
  $items['shrtr/new'] = array(
    'title' => 'New URL',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shrtr_new_form'),
    'access arguments' => array('access content'),
  );
  $items['shrtr/%'] = array(
    'title' => 'URL',
    'page callback' => 'shrtr_goto',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
  $items['shrtr/list'] = array(
    'title' => 'URL list',
    'page callback' => 'shrtr_list_page',
    'access arguments' => array('access content'),
  );
  $items['admin/config/content/shrtr'] = array(
    'title' => 'Expire time enable/disable',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shrtr_admin_page'),
    'access arguments' => array('access content'),
  );
 return $items;
}

function shrtr_admin_page(){
$form['shrtr_expire_disable'] = array(
  '#type' => 'checkbox',
  '#default_value' => variable_get('shrtr_expire_disable',0), 
  '#title' => t('Expire Time Disable'),
);
return  system_settings_form($form);
}

/**
 * Returns a form array for submit new ULR-s.
 */
function shrtr_new_form($form = array(), &$form_state) {
  $form['url'] = array(
    '#type' => 'textfield',
    '#title' => t('URL'),
    '#size' => 30,
    '#prefix' => '<div id="shrtr-ajax">',
  );
  $form['message'] = array(
    '#markup' => t('Give a URL to shorten.'),
  );
  $enable_disable = variable_get('shrtr_expire_disable', 0);
  if($enable_disable == 0){
    $form['expire'] = array(
      '#type' => 'select',
      '#title' => t('Expire'),
      '#options' => array(
        0 => t('Never'),
        600 => '10' . t('min'),
        1200 => '20' . t('min'),
      ),
      '#default_value' => 0,
      '#description' => t('Time to expire'),
    );
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#ajax' => array(
      'callback' => 'shrtr_new_form_callback',
      'wrapper' => 'shrtr-ajax',
      'effect' => 'fade',
    ),
    '#suffix' => '</div>',
  );

  return $form;
}

function shrtr_new_form_callback($form, $form_state) {
  global $base_url;
  if (!empty($form_state['values']['url'])) {
    $link = $base_url . '/shrtr/' . $form_state['shrtr_alias'];
    $alias = t('The new URL alias is: !alias', array('!alias' => l($link, $link)));
    $form['message']['#markup'] = $alias;
  }
  return $form;
}

/**
 * Form submit hook, insert new URLs to database.
 */
function shrtr_new_form_submit($form, &$form_state) {
  global $user;
  global $base_url;

  $alias = variable_get('shrtr_alias', 0);

  $result = array();
  do {
    $alias++;

    $result = db_select('shrtr_urls', 'a')
      ->fields('a', array('alias'))
      ->condition('alias', $alias)
      ->execute()
      ->fetchAssoc();
  } while (!empty($result));
  variable_set('shrtr_alias', $alias);

  if ($form_state['values']['expire'] != 0) {
    $expire = REQUEST_TIME + $form_state['values']['expire'];
  }
  else {
    $expire = 0;
  }
  
  $regex = '/(^http:\/\/|^ftp:\/\/|^news:|^https:\/\/|mailto:)([\x21-\x7E-]+\.)/';
  $url = $form_state['values']['url'];
  if(!preg_match($regex, $url, $matches))$url="http://".$url; 
  
  $record = array(
    'url' => $url,
    'uid' => $user->uid,
    'created' => REQUEST_TIME,
    'expire' => $expire,
    'alias' => $alias,
  );

  drupal_write_record('shrtr_urls', $record);

  $form_state['shrtr_alias'] = $alias;
}

/**
 * Redirects to long URL.
 */
function shrtr_goto($alias) {
  $result = db_select('shrtr_urls', 's')
    ->fields('s', array('url', 'expire'))
    ->condition('alias', $alias)
    ->execute()
    ->fetchAssoc();

  if ($result['expire'] == 0 || $result['expire'] > REQUEST_TIME) {
    drupal_goto($result['url']);
  }
  else {
    $message = t('The URL is expired.');
    drupal_set_message($message, 'warning');
    drupal_goto();
  }
}

function shrtr_block_info() {
  $blocks['shrtr_new'] = array(
    'info' => t('Submit new URL'),
  );
  return $blocks;
}

function shrtr_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'shrtr_new':
      $block['subject'] = t('New URL');
      $block['content'] = array(
        'form' => drupal_get_form('shrtr_new_form'),
      );
      break;


  }
  return $block;
}

function shrtr_list_page() {
  global $base_url;

  $urls = db_select('shrtr_urls', 's')
     ->fields('s')
     ->execute();

  $header = array(t('ID'), t('User'), t('Original URL'), t('New URL'), t('Subbmitted'), t('Expire time'));
  $rows = array();

  while ($url = $urls->fetchAssoc()) {
    $new_url = $base_url . '/shrtr/' . $url['alias']; 
    $row = array();
    $row[] = $url['id'];
    $row[] = $url['uid'];
    $row[] = l($url['url'], $url['url']);
    $row[] = l($new_url, $new_url);
    $row[] = format_date($url['created']);
    $row[] = format_date($url['expire']);
    $rows[] = $row;
  }
  
  $content['table'] = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows,
  );

  return $content;
}

function shrtr_urls_admin() {
  global $base_url;

  $urls = db_select('shrtr_urls', 's')
     ->fields('s')
     ->execute();

  $header = array(t('ID'), t('Enabled'), t('User'), t('Original URL'), t('New URL'), t('Subbmitted'), t('Expire time'));
  $rows = array();
  $default = array();

  while ($url = $urls->fetchAssoc()) {
    $new_url = $base_url . '/shrtr/' . $url['id']; 
    $row = array();
    $row[] = $url['id'];
    $row[] = $url['enabled'];
    $row[] = $url['uid'];
    $row[] = l($url['url'], $url['url']);
    $row[] = l($new_url, $new_url);
    $row[] = format_date($url['created']);
    $row[] = format_date($url['expire']);
    $rows[$url['id']] = $row;
    $default[$url['id']] = $url['enabled'];
  }
  
  $form['urls_admin'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $rows,
    '#default_value' => $default,
    '#empty' => t('No content available.'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

function shrtr_urls_admin_submit($form, &$form_state) {
  $default = $form_state['complete form']['urls_admin']['#default_value'];
  $new = $form_state['values']['urls_admin'];
  $diff = array_diff_assoc($new, $default);
  foreach ($diff as $id => $value) {
    if ($value) {
      db_update('shrtr_urls')
        ->fields(array('enabled' => 1))
        ->condition('id', $id)
        ->execute();
    }
    else {
      db_update('shrtr_urls')
        ->fields(array('enabled' => 0))
        ->condition('id', $id)
        ->execute();
    }
  }
}
